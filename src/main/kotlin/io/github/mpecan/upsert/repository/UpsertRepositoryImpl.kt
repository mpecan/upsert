package io.github.mpecan.upsert.repository

import io.github.mpecan.upsert.model.ConditionalInfo
import io.github.mpecan.upsert.model.UpsertModel

/**
 * Implementation of UpsertRepository.
 * This class provides the implementation for the upsert and upsertAll methods.
 *
 * @param T The entity type
 * @param ID The type of the entity's ID
 */
class UpsertRepositoryImpl<T : Any, ID>(
    private val upsertOperations: UpsertOperations,
    private val upsertModel: UpsertModel
) : UpsertRepository<T, ID> {

    /**
     * Perform an upsert operation for the given entity.
     *
     * @param entity The entity to upsert
     * @return The updated entity with any autogenerated fields
     */
    override fun upsert(entity: T): T {
        val tableName = upsertModel.getTableName()
        return upsertOperations.upsert(entity, tableName)
    }

    /**
     * Perform an upsert operation for the given entity with custom ON clause and ignored fields.
     *
     * @param entity The entity to upsert
     * @param onFields The fields to use for the ON clause
     * @param ignoredFields The fields to ignore during updates
     * @param ignoreAllFields Whether to ignore all fields during updates
     * @return The updated entity with any autogenerated fields
     */
    override fun upsert(
        entity: T,
        onFields: List<String>,
        ignoredFields: List<String>,
        ignoreAllFields: Boolean
    ): T {
        return upsertOperations.upsert(
            entity,
            upsertModel.getTableName(),
            onFields,
            ignoredFields,
            ignoreAllFields
        )
    }

    /**
     * Perform an upsert operation for the given list of entities.
     *
     * @param entities The list of entities to upsert
     * @return The list of updated entities with any autogenerated fields
     */
    override fun upsertAll(entities: List<T>): List<T> {
        if (entities.isEmpty()) {
            return emptyList()
        }

        val tableName = upsertModel.getTableName()
        return upsertOperations.upsertAll(entities, tableName)
    }

    /**
     * Perform an upsert operation for the given list of entities with custom ON clause and ignored fields.
     *
     * @param entities The list of entities to upsert
     * @param onFields The fields to use for the ON clause
     * @param ignoredFields The fields to ignore during updates
     * @param ignoreAllFields Whether to ignore all fields during updates
     * @return The list of updated entities with any autogenerated fields
     */
    override fun upsertAll(
        entities: List<T>,
        onFields: List<String>,
        ignoredFields: List<String>,
        ignoreAllFields: Boolean
    ): List<T> {
        if (entities.isEmpty()) {
            return emptyList()
        }

        return upsertOperations.upsertAll(
            entities,
            upsertModel.getTableName(),
            onFields,
            ignoredFields,
            ignoreAllFields
        )
    }

    /**
     * Perform an upsert operation for the given entity with custom ON clause, ignored fields, and conditional clause.
     *
     * @param entity The entity to upsert
     * @param onFields The fields to use for the ON clause
     * @param ignoredFields The fields to ignore during updates
     * @param ignoreAllFields Whether to ignore all fields during updates
     * @param conditionalInfo The conditional information for when updates should occur
     * @return The updated entity with any autogenerated fields
     */
    override fun upsert(
        entity: T,
        onFields: List<String>,
        ignoredFields: List<String>,
        ignoreAllFields: Boolean,
        conditionalInfo: ConditionalInfo?
    ): T {
        return upsertOperations.upsert(
            entity,
            upsertModel.getTableName(),
            onFields,
            ignoredFields,
            ignoreAllFields,
            conditionalInfo
        )
    }

    /**
     * Perform an upsert operation for the given list of entities with custom ON clause, ignored fields, and conditional clause.
     *
     * @param entities The list of entities to upsert
     * @param onFields The fields to use for the ON clause
     * @param ignoredFields The fields to ignore during updates
     * @param ignoreAllFields Whether to ignore all fields during updates
     * @param conditionalInfo The conditional information for when updates should occur
     * @return The list of updated entities with any autogenerated fields
     */
    override fun upsertAll(
        entities: List<T>,
        onFields: List<String>,
        ignoredFields: List<String>,
        ignoreAllFields: Boolean,
        conditionalInfo: ConditionalInfo?
    ): List<T> {
        if (entities.isEmpty()) {
            return emptyList()
        }

        return upsertOperations.upsertAll(
            entities,
            upsertModel.getTableName(),
            onFields,
            ignoredFields,
            ignoreAllFields,
            conditionalInfo
        )
    }

}
