package io.github.mpecan.upsert.dialect

import io.github.mpecan.upsert.model.ColumnInfo
import io.github.mpecan.upsert.model.UpsertModel
import org.springframework.jdbc.core.namedparam.NamedParameterJdbcTemplate

/**
 * Interface for database-specific upsert SQL generation and execution.
 * Different databases have different syntax for upsert operations,
 * so this interface allows for database-specific implementations.
 */
interface UpsertDialect {

    /**
     * Generate a batch upsert SQL statement for multiple entities.
     *
     * @param tableName The name of the table
     * @param keyColumns The columns to use as keys for the upsert operation
     * @param valueColumns The columns to update during the upsert operation
     * @param batchSize The number of entities in the batch
     * @return The generated SQL statement
     */
    fun generateBatchUpsertSql(
        tableName: String,
        keyColumns: List<ColumnInfo>,
        valueColumns: List<ColumnInfo>,
        updateColumns: List<ColumnInfo> = valueColumns,
        batchSize: Int
    ): String

    /**
     * Executes an upsert operation for the given entities using the provided UpsertInstance.
     * This method handles all database-specific differences in the upsert operation.
     *
     * @param upsertInstance The UpsertInstance containing the table name, key columns, value columns, and update columns
     * @param entities The list of entities to upsert
     * @param jdbcTemplate The NamedParameterJdbcTemplate to use for executing the SQL
     * @return The list of updated entities with any autogenerated fields
     */
    fun <T : Any> upsertData(
        upsertInstance: UpsertModel.UpsertInstance,
        entities: List<T>,
        jdbcTemplate: NamedParameterJdbcTemplate
    ): List<T>
}
