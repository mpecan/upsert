name: SNAPSHOT Deployment

on:
  push:
    branches: [ main ]

permissions:
  contents: write
  packages: write

jobs:
  check-snapshot:
    runs-on: ubuntu-latest
    outputs:
      is_snapshot: ${{ steps.check-version.outputs.is_snapshot }}
    steps:
      - uses: actions/checkout@v4

      - name: Check if version is SNAPSHOT
        id: check-version
        run: |
          # Extract version from gradle.properties
          VERSION=$(grep -oP 'version=\K[^\s]+' gradle.properties)
          # Check if version already has -SNAPSHOT suffix
          if [[ $VERSION == *-SNAPSHOT ]]; then
            echo "is_snapshot=true" >> $GITHUB_OUTPUT
            echo "Current version is a SNAPSHOT version: $VERSION"
          else
            echo "is_snapshot=false" >> $GITHUB_OUTPUT
            echo "Current version is not a SNAPSHOT version: $VERSION"
          fi

  deploy-snapshot:
    needs: check-snapshot
    if: ${{ needs.check-snapshot.outputs.is_snapshot == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Cache Gradle Wrapper separately
      - name: Cache Gradle Wrapper
        uses: actions/cache@v4
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-

      # Set up JDK with Gradle cache
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/jdks
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      # Cache TestContainers images
      - name: Cache TestContainers images
        uses: actions/cache@v4
        with:
          path: ~/.testcontainers
          key: ${{ runner.os }}-testcontainers-${{ hashFiles('**/build.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-testcontainers-

      # Cache Maven local repository
      - name: Cache Maven local repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build --build-cache

      - name: Test
        run: ./gradlew test --build-cache

      # Publish to Maven Central SNAPSHOT repository
      - name: Publish to Maven Central SNAPSHOT repository
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_PASSPHRASE }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_PRIVATE_KEY }}
        run: |
          ./gradlew publishAllPublicationsToMavenCentralRepository
