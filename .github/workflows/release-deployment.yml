name: Release Deployment

on:
  release:
    types: [ created ]

permissions:
  contents: write
  pull-requests: write

jobs:
  deploy-release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Cache Gradle Wrapper separately
      - name: Cache Gradle Wrapper
        uses: actions/cache@v4
        with:
          path: ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-wrapper-${{ hashFiles('**/gradle/wrapper/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-wrapper-

      # Set up JDK with Gradle cache
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      # Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/jdks
          key: ${{ runner.os }}-gradle-caches-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-caches-

      # Cache TestContainers images
      - name: Cache TestContainers images
        uses: actions/cache@v4
        with:
          path: ~/.testcontainers
          key: ${{ runner.os }}-testcontainers-${{ hashFiles('**/build.gradle.kts') }}
          restore-keys: |
            ${{ runner.os }}-testcontainers-

      # Cache Maven local repository
      - name: Cache Maven local repository
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew build --build-cache

      - name: Test
        run: ./gradlew test --build-cache

      # Publish to Maven Central
      - name: Publish to Maven Central
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.OSSRH_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.OSSRH_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.GPG_KEY_ID }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.GPG_PASSPHRASE }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.GPG_PRIVATE_KEY }}
        run: ./gradlew publish --build-cache

      # Generate GitHub App token
      - name: Generate GitHub App token
        uses: actions/create-github-app-token@v2
        id: generate-token
        with:
          app-id: ${{ secrets.REPOSITORY_BUTLER_APP_ID }}
          private-key: ${{ secrets.REPOSITORY_BUTLER_PEM }}

      # Update README.md with current version
      - name: Update README.md with current version
        id: update-readme
        run: |
          # Extract version from gradle.properties
          VERSION=$(grep -oP 'version=\K[^\s]+' gradle.properties)

          # Remove -SNAPSHOT suffix if present
          RELEASE_VERSION=${VERSION%-SNAPSHOT}

          # Set as output for use in subsequent steps
          echo "release_version=$RELEASE_VERSION" >> $GITHUB_OUTPUT

          # Update version in README.md
          sed -i "s/implementation(\"io.github.mpecan:upsert:[^\"]*\")/implementation(\"io.github.mpecan:upsert:$RELEASE_VERSION\")/" README.md
          sed -i "s/implementation 'io.github.mpecan:upsert:[^']*'/implementation 'io.github.mpecan:upsert:$RELEASE_VERSION'/" README.md
          sed -i "s/<version>[^<]*<\/version>/<version>$RELEASE_VERSION<\/version>/" README.md

      # Create Pull Request
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v7
        with:
          token: ${{ steps.generate-token.outputs.token }}
          commit-message: "chore: update version in README.md to ${{ steps.update-readme.outputs.release_version }}"
          title: "chore: update version in README.md to ${{ steps.update-readme.outputs.release_version }}"
          body: |
            This PR updates the version references in README.md to match the latest release version ${{ steps.update-readme.outputs.release_version }}.

            Automated changes by GitHub Actions after release creation.
          branch: update-readme-version
          base: main
          delete-branch: true
          sign-commits: true
